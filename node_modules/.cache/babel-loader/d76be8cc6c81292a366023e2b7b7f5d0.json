{"ast":null,"code":"var _jsxFileName = \"/Users/racheldi/Desktop/milkNbread/micro-chat-room/src/views/MicroChatRoomApp.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"reactstrap\";\nimport { updateParticipants, updateMessages, logout, openTutorial } from \"../redux/actions\";\nimport MessagesDisplay from \"../components/MessagesDisplay\";\nimport ParticipantsDisplay from \"../components/ParticipantsDisplay\";\nimport OnboardingTutorial from \"../components/OnboardingTutorial\";\nimport MessageInputArea from \"../components/MessageInputArea\";\n\nconst mapStateToProps = state => {\n  const selfId = state.participants.selfId;\n  const participants = state.participants.participants;\n  const showTutorial = state.tutorial.showTutorial;\n  return {\n    selfId,\n    participants,\n    showTutorial\n  };\n};\n\nclass MicroChatRoomApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.participantsUpdated = event => {\n      this.props.updateParticipants(event.detail);\n    };\n\n    this.messagesUpdated = event => {\n      this.props.updateMessages(event.detail);\n    };\n\n    this.participantsUpdated = this.participantsUpdated.bind(this);\n    this.messagesUpdated = this.messagesUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"participantsupdated\", this.participantsUpdated);\n  }\n\n  componentDidUpdate(prevProps) {\n    // add into the room\n    if (prevProps.selfId !== this.props.selfId) {\n      document.addEventListener(\"messagesupdated\", this.messagesUpdated);\n      document.addEventListener(\"enterkeyclicked\", this.onEnterKeyClicked);\n    }\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.props.showTutorial ? React.createElement(OnboardingTutorial, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"chat-room-background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"messages-participants\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: this.props.openTutorial,\n      className: \"tutorial-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Get Started\"), React.createElement(\"div\", {\n      className: \"scrollable-area message-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(MessagesDisplay, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"scrollable-area participant-list-background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(ParticipantsDisplay, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      onClick: this.props.logout,\n      className: \"logout-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Log out\"))), React.createElement(Container, {\n      className: \"stick-to-bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(MessageInputArea, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  updateParticipants,\n  updateMessages,\n  openTutorial,\n  logout\n})(MicroChatRoomApp);","map":{"version":3,"sources":["/Users/racheldi/Desktop/milkNbread/micro-chat-room/src/views/MicroChatRoomApp.js"],"names":["React","Component","Fragment","connect","Container","updateParticipants","updateMessages","logout","openTutorial","MessagesDisplay","ParticipantsDisplay","OnboardingTutorial","MessageInputArea","mapStateToProps","state","selfId","participants","showTutorial","tutorial","MicroChatRoomApp","constructor","props","participantsUpdated","event","detail","messagesUpdated","bind","componentDidMount","document","addEventListener","componentDidUpdate","prevProps","onEnterKeyClicked","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"reactstrap\";\n\nimport { updateParticipants, updateMessages, logout, openTutorial } from \"../redux/actions\";\n\nimport MessagesDisplay from \"../components/MessagesDisplay\";\nimport ParticipantsDisplay from \"../components/ParticipantsDisplay\";\nimport OnboardingTutorial from \"../components/OnboardingTutorial\";\n\nimport MessageInputArea from \"../components/MessageInputArea\";\n\nconst mapStateToProps = state => {\n\n    const selfId = state.participants.selfId;\n    const participants = state.participants.participants;\n    const showTutorial = state.tutorial.showTutorial;\n    return { selfId, participants, showTutorial };\n};\n\nclass MicroChatRoomApp extends Component {\n    constructor(props) {\n        super(props);\n\n        this.participantsUpdated = this.participantsUpdated.bind(this);\n        this.messagesUpdated = this.messagesUpdated.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"participantsupdated\", this.participantsUpdated);\n    }\n\n    componentDidUpdate(prevProps) {\n        // add into the room\n        if (prevProps.selfId !== this.props.selfId) {\n            document.addEventListener(\"messagesupdated\", this.messagesUpdated);\n            document.addEventListener(\"enterkeyclicked\", this.onEnterKeyClicked);\n        }\n    }\n\n    participantsUpdated = event => {\n        this.props.updateParticipants(event.detail);\n    }\n\n    messagesUpdated = event => {\n        this.props.updateMessages(event.detail);\n    }\n\n\n    render() {\n        return (\n\n            <Fragment >\n                {this.props.showTutorial ?\n                    <OnboardingTutorial />\n                    :\n                    <div className='chat-room-background'>\n\n                        <div className='messages-participants'>\n                            <div onClick={this.props.openTutorial} className='tutorial-link'>Get Started</div>\n\n                            <div className='scrollable-area message-list'>\n                                <MessagesDisplay />\n                            </div>\n                            <div className='scrollable-area participant-list-background'>\n                                <div>\n                                    <ParticipantsDisplay />\n                                </div>\n                                <div onClick={this.props.logout} className='logout-link'>Log out</div>\n                            </div>\n\n                        </div>\n                        <Container className='stick-to-bottom'>\n                            <MessageInputArea />\n                        </Container>\n                    </div>\n                }\n            </Fragment>\n\n        );\n    }\n}\n\n\nexport default connect(\n    mapStateToProps,\n    { updateParticipants, updateMessages, openTutorial, logout }\n)(MicroChatRoomApp);"]},"metadata":{},"sourceType":"module"}