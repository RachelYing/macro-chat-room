{"ast":null,"code":"var _jsxFileName = \"/Users/racheldi/Desktop/milkNbread/micro-chat-room/src/views/App.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Alert } from \"reactstrap\";\nimport \"../styles.css\";\nimport Login from \"../components/Login\";\nimport Register from \"../components/Register\";\nimport { REGISTER_STATUS, LOGIN_STATUS } from \"../constants\";\nimport MicroChatRoomApp from \"./MicroChatRoomApp\";\nimport Modal from 'react-responsive-modal';\nimport OnboardingTutorial from \"../components/OnboardingTutorial\";\nimport { openTutorial } from \"../redux/actions\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      popDialog: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.showDialog = this.showDialog.bind(this);\n    this.closeDialog = this.closeDialog.bind(this);\n  }\n\n  handleSubmit() {\n    this.closeDialog();\n  }\n\n  showDialog() {\n    this.setState({\n      popDialog: true\n    });\n  }\n\n  closeDialog() {\n    this.setState({\n      popDialog: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.props.showTutorial ? React.createElement(OnboardingTutorial, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"app-background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: this.props.openTutorial,\n      className: \"tutorial-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Get Started\"), this.props.loginStatus !== LOGIN_STATUS.SUCCESSFUL ? React.createElement(\"div\", {\n      className: \"login-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.renderAlert(), React.createElement(Login, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.showDialog,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Register\"), React.createElement(Modal, {\n      open: this.state.popDialog,\n      onClose: this.closeDialog,\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Register, {\n      handleSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }))) : React.createElement(MicroChatRoomApp, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }\n\n  renderAlert() {\n    if (this.props.registerStatus === REGISTER_STATUS.REQUESTED) {\n      return React.createElement(Alert, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Sending information.\");\n    }\n\n    if (this.props.registerStatus === REGISTER_STATUS.SUCCESSFUL) {\n      return React.createElement(Alert, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Registered successfully! Please log in.\");\n    }\n\n    if (this.props.registerStatus === REGISTER_STATUS.FAILED) {\n      return React.createElement(Alert, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Registered failed!\");\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const loginStatus = state.login.status;\n  const currentUserId = state.participants.currentUserId;\n  const showTutorial = state.tutorial.showTutorial;\n  const registerStatus = state.register.status;\n  return {\n    loginStatus,\n    currentUserId,\n    showTutorial,\n    registerStatus\n  };\n};\n\nexport default connect(mapStateToProps, {\n  openTutorial\n})(App);","map":{"version":3,"sources":["/Users/racheldi/Desktop/milkNbread/micro-chat-room/src/views/App.js"],"names":["React","Component","connect","Button","Alert","Login","Register","REGISTER_STATUS","LOGIN_STATUS","MicroChatRoomApp","Modal","OnboardingTutorial","openTutorial","App","constructor","props","state","popDialog","handleSubmit","bind","showDialog","closeDialog","setState","render","showTutorial","loginStatus","SUCCESSFUL","renderAlert","registerStatus","REQUESTED","FAILED","mapStateToProps","login","status","currentUserId","participants","tutorial","register"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button,Alert } from \"reactstrap\";\nimport \"../styles.css\";\nimport Login from \"../components/Login\";\nimport Register from \"../components/Register\";\nimport { REGISTER_STATUS,LOGIN_STATUS } from \"../constants\";\nimport MicroChatRoomApp from \"./MicroChatRoomApp\";\nimport Modal from 'react-responsive-modal';\nimport OnboardingTutorial from \"../components/OnboardingTutorial\";\nimport { openTutorial } from \"../redux/actions\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            popDialog: false,\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.showDialog = this.showDialog.bind(this);\n        this.closeDialog = this.closeDialog.bind(this);\n\n    }\n\n    handleSubmit() {\n\n        this.closeDialog();\n    }\n\n    showDialog() {\n        this.setState({ popDialog: true });\n    }\n\n    closeDialog() {\n        this.setState({ popDialog: false });\n    }\n\n    render() {\n        return (\n            <div>\n\n                {this.props.showTutorial ?\n                    <OnboardingTutorial />\n                    :\n                    <div className='app-background'>\n                        <div onClick={this.props.openTutorial} className='tutorial-link'>Get Started</div>\n                        {this.props.loginStatus !== LOGIN_STATUS.SUCCESSFUL ?\n\n                            <div className='login-section'>\n                                {this.renderAlert()}\n                                <Login />\n                                <Button onClick={this.showDialog} color='primary'>Register</Button>\n                                <Modal\n                                    open={this.state.popDialog}\n                                    onClose={this.closeDialog}\n                                    center>\n                                    <Register handleSubmit={this.handleSubmit} />\n                                </Modal>\n                            </div>\n                            :\n                            <MicroChatRoomApp />}\n                    </div>\n\n                }\n            </div>\n        )\n    }\n\n    renderAlert() {\n        if (this.props.registerStatus === REGISTER_STATUS.REQUESTED) {\n            return (\n                <Alert color=\"primary\">\n                    Sending information.\n                </Alert>\n            );\n\n        }\n\n        if (this.props.registerStatus === REGISTER_STATUS.SUCCESSFUL) {\n            return (\n                <Alert color=\"success\">\n                    Registered successfully! Please log in.\n                </Alert>\n            );\n\n        }\n        if (this.props.registerStatus === REGISTER_STATUS.FAILED) {\n            return (\n                <Alert color=\"danger\">\n                    Registered failed!\n                </Alert>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    const loginStatus = state.login.status;\n    const currentUserId = state.participants.currentUserId;\n    const showTutorial = state.tutorial.showTutorial;\n    const registerStatus = state.register.status;\n    return { loginStatus, currentUserId, showTutorial, registerStatus };\n}\n\nexport default connect(mapStateToProps, { openTutorial })(App);\n"]},"metadata":{},"sourceType":"module"}