{"ast":null,"code":"var _jsxFileName = \"/Users/racheldi/Desktop/milkNbread/micro-chat-room/src/components/ParticipantsDisplay.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport profile_image from '../resources/profile_image.png';\n\nconst mapStateToProps = state => {\n  const participants = state.participants.participants;\n  return {\n    participants\n  };\n};\n\nclass ParticipantsDisplay extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Participants\"), this.props.participants ? Object.values(this.props.participants).map((participant, index) => {\n      return React.createElement(\"div\", {\n        className: \"participant-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"circular--portrait\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: participant['headPortrait'] && participant['headPortrait'].length > 0 ? participant['headPortrait'] : profile_image,\n        alt: \"participant headportait\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"participant-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, participant['userName']));\n    }) : null);\n  }\n\n}\n\nexport default connect(mapStateToProps, null)(ParticipantsDisplay);","map":{"version":3,"sources":["/Users/racheldi/Desktop/milkNbread/micro-chat-room/src/components/ParticipantsDisplay.js"],"names":["React","Component","Fragment","connect","profile_image","mapStateToProps","state","participants","ParticipantsDisplay","constructor","props","render","Object","values","map","participant","index","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,QAAMC,YAAY,GAAGD,KAAK,CAACC,YAAN,CAAmBA,YAAxC;AACA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACH,CAHD;;AAKA,MAAMC,mBAAN,SAAkCP,SAAlC,CAA4C;AACxCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEK,KAAKD,KAAL,CAAWH,YAAX,GACKK,MAAM,CAACC,MAAP,CAAc,KAAKH,KAAL,CAAWH,YAAzB,EAAuCO,GAAvC,CAA2C,CAACC,WAAD,EAAcC,KAAd,KAAwB;AACjE,aACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAED,WAAW,CAAC,cAAD,CAAX,IAA+BA,WAAW,CAAC,cAAD,CAAX,CAA4BE,MAA5B,GAAqC,CAApE,GAAwEF,WAAW,CAAC,cAAD,CAAnF,GAAsGX,aAAhH;AAA+H,QAAA,GAAG,EAAC,yBAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCW,WAAW,CAAC,UAAD,CAA5C,CAJJ,CADJ;AAQH,KATC,CADL,GAWK,IAbV,CADJ;AAkBH;;AAxBuC;;AA2B5C,eAAeZ,OAAO,CAACE,eAAD,EAAkB,IAAlB,CAAP,CAA+BG,mBAA/B,CAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport profile_image from '../resources/profile_image.png';\n\nconst mapStateToProps = state => {\n    const participants = state.participants.participants;\n    return { participants };\n};\n\nclass ParticipantsDisplay extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <p>Participants</p>\n                {this.props.participants\n                    ? Object.values(this.props.participants).map((participant, index) => {\n                        return (\n                            <div className='participant-list'>\n                                <div className=\"circular--portrait\">\n                                    <img src={participant['headPortrait'] && participant['headPortrait'].length > 0 ? participant['headPortrait'] : profile_image} alt='participant headportait' />\n                                </div>\n                                <p className='participant-name'>{participant['userName']}</p>\n                            </div>\n                        )\n                    })\n                    : null}\n\n            </Fragment>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, null)(ParticipantsDisplay);"]},"metadata":{},"sourceType":"module"}