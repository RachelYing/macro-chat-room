{"ast":null,"code":"var _jsxFileName = \"/Users/racheldi/Desktop/milkNbread/micro-chat-room/src/components/MessagesDisplay.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport Message from \"../components/Message\";\n\nconst mapStateToProps = state => {\n  const messages = state.messages.messages;\n  return {\n    messages\n  };\n};\n\nclass MessagesDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.scrollToBottom = this.scrollToBottom.bind(this);\n  }\n\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  scrollToBottom() {\n    this.el.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.props.messages ? this.props.messages.map((message, index) => {\n      return React.createElement(Message, {\n        key: index,\n        id: index,\n        message: message,\n        clientId: message.clientId,\n        headPortrait: message.headPortrait,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    }) : null), React.createElement(\"div\", {\n      ref: el => {\n        this.el = el;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(mapStateToProps, null)(MessagesDisplay);","map":{"version":3,"sources":["/Users/racheldi/Desktop/milkNbread/micro-chat-room/src/components/MessagesDisplay.js"],"names":["React","Component","Fragment","connect","Message","mapStateToProps","state","messages","MessagesDisplay","constructor","props","scrollToBottom","bind","componentDidMount","componentDidUpdate","el","scrollIntoView","behavior","render","map","message","index","clientId","headPortrait"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAN,CAAeA,QAAhC;AACA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACH,CAHD;;AAKA,MAAMC,eAAN,SAA8BP,SAA9B,CAAwC;AACpCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,cAAL;AACH;;AAEDG,EAAAA,kBAAkB,GAAG;AACjB,SAAKH,cAAL;AACH;;AAEDA,EAAAA,cAAc,GAAG;AACb,SAAKI,EAAL,CAAQC,cAAR,CAAuB;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAvB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKR,KAAL,CAAWH,QAAX,GACK,KAAKG,KAAL,CAAWH,QAAX,CAAoBY,GAApB,CAAwB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC1C,aACI,oBAAC,OAAD;AACI,QAAA,GAAG,EAAEA,KADT;AAEI,QAAA,EAAE,EAAEA,KAFR;AAGI,QAAA,OAAO,EAAED,OAHb;AAII,QAAA,QAAQ,EAAEA,OAAO,CAACE,QAJtB;AAKI,QAAA,YAAY,EAAEF,OAAO,CAACG,YAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAQH,KATC,CADL,GAWK,IAZV,CADJ,EAgBI;AAAK,MAAA,GAAG,EAAER,EAAE,IAAI;AAAE,aAAKA,EAAL,GAAUA,EAAV;AAAe,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBJ,CADJ;AAoBH;;AAvCmC;;AA0CxC,eAAeZ,OAAO,CAACE,eAAD,EAAkB,IAAlB,CAAP,CAA+BG,eAA/B,CAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport Message from \"../components/Message\";\n\nconst mapStateToProps = state => {\n    const messages = state.messages.messages;\n    return { messages };\n};\n\nclass MessagesDisplay extends Component {\n    constructor(props) {\n        super(props);\n        this.scrollToBottom = this.scrollToBottom.bind(this);\n    }\n\n    componentDidMount() {\n        this.scrollToBottom();\n    }\n\n    componentDidUpdate() {\n        this.scrollToBottom();\n    }\n\n    scrollToBottom() {\n        this.el.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    render() {\n        return (\n            <Fragment >\n                <div>\n                    {this.props.messages\n                        ? this.props.messages.map((message, index) => {\n                            return (\n                                <Message\n                                    key={index}\n                                    id={index}\n                                    message={message}\n                                    clientId={message.clientId}\n                                    headPortrait={message.headPortrait}\n                                />)\n                        })\n                        : null}\n\n                </div>\n                <div ref={el => { this.el = el; }}></div>\n            </Fragment>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, null)(MessagesDisplay);"]},"metadata":{},"sourceType":"module"}