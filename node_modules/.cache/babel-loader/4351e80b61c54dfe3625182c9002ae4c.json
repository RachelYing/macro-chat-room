{"ast":null,"code":"var _jsxFileName = \"/Users/racheldi/Desktop/milkNbread/micro-chat-room/src/components/Register.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Col, Button, FormGroup, Label, Input, Alert } from \"reactstrap\";\nimport { register } from \"../redux/actions\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\",\n      password: \"\",\n      validInputs: true\n    };\n    this.fileInput = React.createRef();\n    this.onFieldChange = this.onFieldChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    if (this.state.password.length * this.state.userName.length > 0) {\n      this.setState({\n        validInputs: true\n      });\n      this.fileInput.current.files.length > 0 ? this.props.register(this.state.userName, this.state.password, this.fileInput.current.files[0].name, this.fileInput.current.files[0]) : this.props.register(this.state.userName, this.state.password);\n      this.props.handleSubmit();\n    } else {\n      this.setState({\n        validInputs: false\n      });\n    }\n  }\n\n  onFieldChange(event) {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), this.state.validInputs ? null : React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"User name and password are required!\"), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"userName\",\n      className: \"labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"User Name:\"), React.createElement(Input, {\n      type: \"text\",\n      id: \"userName\",\n      value: this.state.title,\n      onChange: this.onFieldChange,\n      autoCorrect: false,\n      autoCapitalize: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"password\",\n      className: \"labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(Input, {\n      type: \"password\",\n      id: \"password\",\n      value: this.state.content,\n      onChange: this.onFieldChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(Label, {\n      for: \"headPortrait\",\n      className: \"labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Profile Image:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"file\",\n      ref: this.fileInput,\n      className: \"labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Register\"));\n  }\n\n}\n\nexport default connect(null, {\n  register\n})(Register);","map":{"version":3,"sources":["/Users/racheldi/Desktop/milkNbread/micro-chat-room/src/components/Register.js"],"names":["React","Component","Fragment","connect","Col","Button","FormGroup","Label","Input","Alert","register","Register","constructor","props","state","userName","password","validInputs","fileInput","createRef","onFieldChange","bind","handleSubmit","length","setState","current","files","name","event","target","id","value","render","title","content"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Col, Button, FormGroup, Label, Input, Alert } from \"reactstrap\";\nimport { register } from \"../redux/actions\";\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userName: \"\",\n            password: \"\",\n            validInputs: true,\n        }\n        this.fileInput = React.createRef();\n        this.onFieldChange = this.onFieldChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit() {\n        if (this.state.password.length * this.state.userName.length > 0) {\n            this.setState({ validInputs: true })\n            this.fileInput.current.files.length > 0 ?\n                this.props.register(this.state.userName, this.state.password, this.fileInput.current.files[0].name, this.fileInput.current.files[0])\n                :\n                this.props.register(this.state.userName, this.state.password);\n            this.props.handleSubmit();\n        } else {\n            this.setState({ validInputs: false });\n        }\n    }\n\n\n    onFieldChange(event) {\n        this.setState({\n            [event.target.id]: event.target.value,\n        });\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <br />\n                {this.state.validInputs ?\n                    null :\n                    <Alert color=\"danger\">\n                        User name and password are required!\n             </Alert>\n                }\n                <FormGroup row>\n                    <Col>\n                        <Label for=\"userName\" className='labels'>User Name:</Label>\n                        <Input type=\"text\" id=\"userName\"\n                            value={this.state.title}\n                            onChange={this.onFieldChange}\n                            autoCorrect={false}\n                            autoCapitalize={false} />\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Col>\n                        <Label for=\"password\" className='labels'>Password:</Label>\n                        <Input type=\"password\" id=\"password\"\n                            value={this.state.content}\n                            onChange={this.onFieldChange} />\n                    </Col>\n                </FormGroup>\n                <Label for=\"headPortrait\" className='labels'>Profile Image:</Label>\n                <br />\n                <input type=\"file\" ref={this.fileInput} className='labels' />\n                <Button onClick={this.handleSubmit}>Register</Button>\n            </Fragment>\n        )\n    }\n}\n\n\nexport default connect(null, { register })(Register);"]},"metadata":{},"sourceType":"module"}