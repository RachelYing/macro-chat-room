{"ast":null,"code":"var _jsxFileName = \"/Users/racheldi/Desktop/milkNbread/micro-chat-room/src/components/Login.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { FormGroup, Label, Input, Button, Row, Col, Alert } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { validateLogin } from \"../redux/actions\";\nimport { LOGIN_STATUS } from \"../constants\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      invalidCredentials: false\n    };\n    this.onFieldChange = this.onFieldChange.bind(this);\n    this.login = this.login.bind(this);\n  }\n\n  onFieldChange(event) {\n    this.setState({\n      [event.target.id]: event.target.value,\n      invalidCredentials: false\n    });\n  }\n\n  login() {\n    this.props.validateLogin(this.state.username, this.state.password);\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.props.status === LOGIN_STATUS.INVALID || this.props.status === LOGIN_STATUS.ERROR ? React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.props.status === LOGIN_STATUS.INVALID ? \"Invalid username or password! Please try again.\" : \"\", this.props.status === LOGIN_STATUS.ERROR ? \"Error connecting to database!\" : \"\") : \"\", React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Username:\"), React.createElement(Input, {\n      type: \"text\",\n      id: \"username\",\n      value: this.state.username,\n      onChange: this.onFieldChange,\n      autoCorrect: false,\n      autoCapitalize: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(Input, {\n      type: \"password\",\n      id: \"password\",\n      value: this.state.password,\n      onChange: this.onFieldChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.login,\n      variant: 'secondary',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Login\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.getUserDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Facebook Login Button\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const status = state.login.status;\n  return {\n    status\n  };\n};\n\nexport default connect(mapStateToProps, {\n  validateLogin\n})(Login);","map":{"version":3,"sources":["/Users/racheldi/Desktop/milkNbread/micro-chat-room/src/components/Login.js"],"names":["React","Component","Fragment","FormGroup","Label","Input","Button","Row","Col","Alert","connect","validateLogin","LOGIN_STATUS","Login","constructor","props","state","username","password","invalidCredentials","onFieldChange","bind","login","event","setState","target","id","value","render","status","INVALID","ERROR","getUserDetails","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { FormGroup, Label, Input, Button, Row, Col, Alert } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { validateLogin } from \"../redux/actions\";\nimport { LOGIN_STATUS } from \"../constants\";\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n            invalidCredentials: false\n        }\n\n        this.onFieldChange = this.onFieldChange.bind(this);\n        this.login = this.login.bind(this);\n    }\n\n    onFieldChange(event) {\n        this.setState({\n            [event.target.id]: event.target.value,\n            invalidCredentials: false\n        });\n    }\n\n    login() {\n        this.props.validateLogin(this.state.username, this.state.password);\n\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {\n                    this.props.status === LOGIN_STATUS.INVALID || this.props.status === LOGIN_STATUS.ERROR ?\n                        <Alert color=\"danger\">\n                            {\n                                this.props.status === LOGIN_STATUS.INVALID ? \"Invalid username or password! Please try again.\" : \"\"\n                            }\n                            {\n                                this.props.status === LOGIN_STATUS.ERROR ? \"Error connecting to database!\" : \"\"\n                            }\n                        </Alert> : \"\"\n                }\n                <FormGroup row>\n                    <Col>\n                        <Label for=\"username\">Username:</Label>\n                        <Input type=\"text\" id=\"username\"\n                            value={this.state.username}\n                            onChange={this.onFieldChange}\n                            autoCorrect={false}\n                            autoCapitalize={false} />\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Col>\n                        <Label for=\"password\">Password:</Label>\n                        <Input type=\"password\" id=\"password\"\n                            value={this.state.password}\n                            onChange={this.onFieldChange} />\n                    </Col>\n                </FormGroup>\n                <Row>\n                    <Col className=\"text-right\">\n                        <Button onClick={this.login} variant={'secondary'}>Login</Button>\n                    </Col>\n                </Row>\n                <Row>\n                  <button onClick={this.getUserDetails}>\n                    Facebook Login Button\n                </button>\n                </Row>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const status = state.login.status;\n    return { status }\n}\n\nexport default connect(mapStateToProps, { validateLogin })(Login);\n"]},"metadata":{},"sourceType":"module"}